---
- name: TASKS | VM_CREATE | Destroy VM if exist
  community.general.proxmox_kvm:
    api_user: "{{ pve_api_user }}"
    api_token_id: "{{ pve_api_token_id }}"
    api_token_secret: "{{ pve_api_token_secret }}"
    api_host: "127.0.0.1"
    node: "{{ local_pve_node.stdout }}"
    name: "{{ pve_vm_name | default(omit) }}"
    vmid: "{{ pve_vm_id | default(omit) }}"
    state: absent
    timeout: 60

- name: TASKS | VM_CREATE | VM Create Basis
  community.general.proxmox_kvm:
    api_user: "{{ pve_api_user }}"
    api_token_id: "{{ pve_api_token_id }}"
    api_token_secret: "{{ pve_api_token_secret }}"
    api_host: "127.0.0.1"
    node: "{{ local_pve_node.stdout }}"
    name: "{{ pve_vm_name | default(omit) }}"
    vmid: "{{ pve_vm_id | default(omit) }}"
    state: present

- name: TASKS | VM_CREATE | Create temporary directory
  tempfile:
    state: directory
  register: local_temp_dir

- name: TASKS | VM_CREATE | Create temporary directory [DEBUG]
  debug:
    msg: "{{ local_temp_dir.path }}"

- name: TASKS | VM_CREATE | Get Image via URL
  get_url:
    url: "{{ template_image_url }}"
    dest: "{{ local_temp_dir.path }}/image"
  when:
   - template_image_url is defined

- name: TASKS | VM_CREATE | Get Image via Local File
  copy:
    src: "{{ template_image_file }}"
    dest: "{{ local_temp_dir.path }}/image"
  when: 
    - template_image_file is defined

- name: TASKS | VM_CREATE | Image Customization
  when:
    - template_image_custom | bool
  block:
    - name: TASKS | VM_CREATE | Image Customization | Copy CMD Scripts
      template:
        src: "{{ item }}"
        dest: "{{ local_temp_dir.path }}/{{ item | basename }}"
      loop: "{{ template_image_custom_cmd_script }}"
      when:
        - template_image_custom_cmd_script is defined

    - name: TASKS | VM_CREATE | Image Customization | Copy Firstboot Scripts
      template:
        src: "{{ item }}"
        dest: "{{ local_temp_dir.path }}/{{ item | basename }}"
      loop: "{{ template_image_custom_firstboot_script }}"
      when:
        - template_image_custom_firstboot_script is defined

    - name: TASKS | VM_CREATE | Image Apply Customizations
      ansible.builtin.shell: |
        virt-customize \
          -a "{{ local_temp_dir.path }}/image" \
        {% for cmd in template_image_custom_cmd | default([]) %}
          --run-command '{{ cmd }}' \
        {% endfor %}
        {% for script in template_image_custom_cmd_script | default([]) %}
          --run '{{ local_temp_dir.path }}/{{ script | basename }}' \
        {% endfor %}
          --update \
        {% for pkg in template_image_custom_install | default([]) %}
          --install '{{ pkg }}' \
        {% endfor %}
        {% for cmd in template_image_custom_firstboot | default([]) %}
          --firstboot-command '{{ cmd }}' \
        {% endfor %}
        {% for script in template_image_custom_firstboot_script | default([]) %}
          --firstboot '{{ local_temp_dir.path }}/{{ script | basename }}' \
        {% endfor %}
      args:
        executable: /bin/bash

- name: TASKS | VM_CREATE | VM Import Disk Image
  ansible.builtin.shell: |
    qm disk import {{ pve_vm_id }} {{ local_temp_dir.path }}/image {{ pve_vm_default_storage }} --format {{ pve_vm_default_storage_format }} | grep "unused[0-9]" | sed -E "s/.*'(unused[0-9]+:)?(.*)'.*/\2/"
  args:
    executable: /bin/bash
  register: report_import_disk

- name: TASKS | VM_CREATE | VM Import Disk Image [DEBUG]
  debug:
    msg: "{{ report_import_disk.stdout }}"

- name: TASKS | VM_CREATE | VM Apply Configuration
  community.general.proxmox_kvm:
    api_user: "{{ pve_api_user }}"
    api_token_id: "{{ pve_api_token_id }}"
    api_token_secret: "{{ pve_api_token_secret }}"
    api_host: "127.0.0.1"
    update: true
    update_unsafe: true
    node: "{{ local_pve_node.stdout | default(omit) }}"
    name: "{{ pve_vm_name | default(omit) }}"
    vmid: "{{ pve_vm_id | default(omit) }}"
    state: present
    agent: "{{ pve_vm_agent | default(omit) }}"
    balloon: "{{ pve_vm_balloon | default(omit) }}"
    bios: "{{ pve_vm_bios | default(omit) }}"
    boot: "{{ pve_vm_boot | default(omit) }}"
    cipassword: "{{ pve_vm_cipassword | default(omit) }}"
    ciuser: "{{ pve_vm_ciuser | default(omit) }}"
    sshkeys: "{{ pve_vm_sshkeys | default (omit) }}"
    cores: "{{ pve_vm_cores | default(omit) }}"
    cpu: "{{ pve_vm_cpu | default(omit) }}"
    cpulimit: "{{ pve_vm_cpulimit | default(omit) }}"
    hotplug: "{{ pve_vm_hotplug | default(omit) }}"
    machine: "{{ pve_vm_machine | default(omit) }}"
    memory: "{{ pve_vm_memory | default(omit) }}"
    name: "{{ pve_vm_name | default(omit) }}"
    net:
      net0: "{{ pve_vm_net_net0 | default(omit) }}"
      net1: "{{ pve_vm_net_net1 | default(omit) }}"
      net2: "{{ pve_vm_net_net2 | default(omit) }}"
      net3: "{{ pve_vm_net_net3 | default(omit) }}"
      net4: "{{ pve_vm_net_net4 | default(omit) }}"
      net5: "{{ pve_vm_net_net5 | default(omit) }}"
    numa_enabled: "{{ pve_vm_numa_enabled }}"
    onboot: "{{ pve_vm_onboot | default(omit) }}"
    ostype: "{{ pve_vm_ostype | default(omit) }}"
    sata:
      sata0: "{{ pve_vm_sata_sata0 | default(omit) }}"
      sata1: "{{ pve_vm_sata_sata1 | default(omit) }}"
      sata2: "{{ pve_vm_sata_sata2 | default(omit) }}"
      sata3: "{{ pve_vm_sata_sata3 | default(omit) }}"
      sata4: "{{ pve_vm_sata_sata4 | default(omit) }}"
      sata5: "{{ pve_vm_sata_sata5 | default(omit) }}"
    scsihw: "{{ pve_vm_scsihw | default(omit) }}"
    serial: "{{ pve_vm_serial | default(omit) }}"
    vga: "{{ pve_vm_vga | default(omit) }}"
    virtio:
      virtio0: "{{ pve_vm_virtio_virtio0 | default(omit) }}"
      virtio1: "{{ pve_vm_virtio_virtio1 | default(omit) }}"
      virtio2: "{{ pve_vm_virtio_virtio2 | default(omit) }}"
      virtio3: "{{ pve_vm_virtio_virtio3 | default(omit) }}"
      virtio4: "{{ pve_vm_virtio_virtio4 | default(omit) }}"
      virtio5: "{{ pve_vm_virtio_virtio5 | default(omit) }}"
    ide:
      ide0: "{{ pve_vm_ide_ide0 | default(omit) }}"
      ide1: "{{ pve_vm_ide_ide1 | default(omit) }}"
      ide2: "{{ pve_vm_ide_ide2 | default(omit) }}"
      ide3: "{{ pve_vm_ide_ide3 | default(omit) }}"
      ide4: "{{ pve_vm_ide_ide4 | default(omit) }}"
      ide5: "{{ pve_vm_ide_ide5 | default(omit) }}"
    keyboard: "{{ pve_vm_keyboard }}"

- name: TASKS | VM_CREATE | VM Convert into Template
  community.general.proxmox_kvm:
    api_user: "{{ pve_api_user }}"
    api_token_id: "{{ pve_api_token_id }}"
    api_token_secret: "{{ pve_api_token_secret }}"
    api_host: "127.0.0.1"
    node: "{{ local_pve_node.stdout }}"
    name: "{{ pve_vm_name | default(omit) }}"
    vmid: "{{ pve_vm_id | default(omit) }}"
    state: template

- name: TASKS | VM_CREATE | Delete temporary directory
  file:
    path: "{{ local_temp_dir.path }}"
    state: absent
